name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      dry_run:
        description: 'Dry run (skip publishing)'
        required: false
        type: boolean
        default: true

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target: [npm, docker]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: matrix.target == 'npm'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        if: matrix.target == 'npm'
        run: npm ci

      - name: Run tests
        if: matrix.target == 'npm'
        run: npm test

      - name: Build npm package
        if: matrix.target == 'npm'
        run: npm pack

      - name: Upload npm package artifact
        if: matrix.target == 'npm'
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: '*.tgz'
          retention-days: 7

      - name: Publish to npm
        if: matrix.target == 'npm' && inputs.dry_run == false
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up Docker Buildx
        if: matrix.target == 'docker'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: matrix.target == 'docker' && inputs.dry_run == false
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        if: matrix.target == 'docker'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            piotrzan/vcluster-yaml-mcp-server:${{ inputs.version }}
            piotrzan/vcluster-yaml-mcp-server:latest
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Docker image artifact
        if: matrix.target == 'docker'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar
          retention-days: 7

      - name: Push Docker image
        if: matrix.target == 'docker' && inputs.dry_run == false
        run: |
          docker load -i /tmp/image.tar
          docker push piotrzan/vcluster-yaml-mcp-server:${{ inputs.version }}
          docker push piotrzan/vcluster-yaml-mcp-server:latest

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: inputs.dry_run == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download npm package
        uses: actions/download-artifact@v4
        with:
          name: npm-package

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: Release v${{ inputs.version }}
          draft: true
          files: |
            *.tgz
            /tmp/image.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
